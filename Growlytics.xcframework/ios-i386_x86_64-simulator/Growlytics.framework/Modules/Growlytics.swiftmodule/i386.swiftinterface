// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.3 (swiftlang-1100.0.282.1 clang-1100.0.33.15)
// swift-module-flags: -target i386-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Growlytics
import CoreData
import CoreTelephony
import Foundation
@_exported import Growlytics
import Swift
import SystemConfiguration
import UIKit
import UserNotifications
import UserNotificationsUI
@objc public class APNSMessagingService : ObjectiveC.NSObject {
  public static let shared: Growlytics.APNSMessagingService
  public func setupAPNSMessagingWith(_ deviceToken: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
extension APNSMessagingService : UserNotifications.UNUserNotificationCenterDelegate {
  @objc dynamic public func userNotificationCenter(_ center: UserNotifications.UNUserNotificationCenter, didReceive response: UserNotifications.UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Swift.Void)
  @objc dynamic public func userNotificationCenter(_ center: UserNotifications.UNUserNotificationCenter, willPresent notification: UserNotifications.UNNotification, withCompletionHandler completionHandler: @escaping (UserNotifications.UNNotificationPresentationOptions) -> Swift.Void)
}
@objc open class GrwNotificationServiceExtension : UserNotifications.UNNotificationServiceExtension {
  open class func didReceive(_ request: UserNotifications.UNNotificationRequest, withContentHandler contentHandler: @escaping (UserNotifications.UNNotificationContent) -> Swift.Void)
  @objc override dynamic public init()
  @objc deinit
}
@objc open class GrwNotificationViewController : UIKit.UIViewController, UserNotificationsUI.UNNotificationContentExtension {
  @objc override dynamic open func viewDidLoad()
  @objc open func didReceive(_ notification: UserNotifications.UNNotification)
  @objc open func didReceive(_ response: UserNotifications.UNNotificationResponse, completionHandler completion: @escaping (UserNotificationsUI.UNNotificationContentExtensionResponseOption) -> Swift.Void)
  @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc public class GrwNotificationConstant : ObjectiveC.NSObject {
  public static let kNotificationContent: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
public enum GrwNotificationCategory : Swift.String {
  case customUI
  public typealias RawValue = Swift.String
  public init?(rawValue: Swift.String)
  public var rawValue: Swift.String {
    get
  }
}
public class Analytics {
  public static func getInstance() -> Growlytics.Analytics
  public func track(eventName: Swift.String)
  public func trackAppInstalled()
  public func track(_ eventName: Swift.String, _ eventAttributes: [Swift.String : Any]?)
  public func identify(_ profileAttributes: [Swift.String : Any]?)
  public func identify(_ uniqueCustomerId: Swift.String?, _ profileAttributes: [Swift.String : Any]?)
  @objc deinit
}
extension UIDevice {
  public static let modelName: Swift.String
}
final public class GrwNotification {
  public init(_ remoteInfo: [Swift.String : Any])
  final public func getTrackingId() -> Swift.String
  final public func getDeepLink() -> Swift.String
  final public func getTtl() -> Swift.String
  final public func isDoRender() -> Swift.Bool
  final public func getActionButtons() -> [Growlytics.GrwNotificationAction]?
  final public func getSmallIconColor() -> Swift.String
  final public func getPriority() -> Swift.String
  final public func getData() -> [Swift.String : Any]
  final public func getNotifiaticationChannel() -> Swift.String
  final public func getTitle() -> Swift.String
  final public func getSubTitle() -> Swift.String
  final public func getMessage() -> Swift.String
  final public func getImageUrl() -> Swift.String
  @objc deinit
}
public class GrwNotificationAction : Swift.Codable {
  public var label: Swift.String!
  public var deeplinkUrl: Swift.String?
  public var index: Swift.Int?
  public var id: Swift.Int?
  public var actionId: Swift.String!
  @objc deinit
  required public init(from decoder: Swift.Decoder) throws
  public func encode(to encoder: Swift.Encoder) throws
}
@objc public class LifeCycleCallback : ObjectiveC.NSObject {
  public static let shared: Growlytics.LifeCycleCallback
  @available(iOS 13.0, *)
  public func register(scene: UIKit.UIScene)
  public func register(application: UIKit.UIApplication)
  @objc override dynamic public init()
  @objc deinit
}
@objc open class GrwNotificationService : UserNotifications.UNNotificationServiceExtension {
  @objc override dynamic open func didReceive(_ request: UserNotifications.UNNotificationRequest, withContentHandler contentHandler: @escaping (UserNotifications.UNNotificationContent) -> Swift.Void)
  @objc override dynamic open func serviceExtensionTimeWillExpire()
  @objc override dynamic public init()
  @objc deinit
}
extension Growlytics.GrwNotificationCategory : Swift.Equatable {}
extension Growlytics.GrwNotificationCategory : Swift.Hashable {}
extension Growlytics.GrwNotificationCategory : Swift.RawRepresentable {}
